[gd_scene load_steps=4 format=2]

[ext_resource path="res://Map.tscn" type="PackedScene" id=1]
[ext_resource path="res://Player.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var playerInfos = []
var spawnPoints = {}
var players = {}
var checkpoints = {}

func _ready():
	yield(Actions.wait(0.5).perform(), \"finished\")
	beltPushPlayerIntoHole()

func playersAct(cards):
	var nTurns = 5
	var turns = []
	var players = get_tree().get_nodes_in_group(\"players\")

	for i in range(nTurns):
		turns.append([])
	for player in players:
		if !cards.has(player):
			continue
		for i in range(nTurns):
			if cards[player].size() > i:
				var card = cards[player][i]
				turns[i].append(card.with(player))
	
	for turn in turns:
		for card in turn:
			card.perform()
			if card.type == Cards.MOVE:
				var finished = false
				while(not finished and card.character != null):
					finished = yield(card, \"stepFinished\") == 0
					yield(getPlayersFallAction().perform(), \"finished\")
				saveCheckpointsIfPossible()
			else:
				yield(card, \"finished\")

	var shootActions = []
	for player in get_tree().get_nodes_in_group(\"players\"):
		shootActions.append(Player.shootAction().with(player))
	yield(Parallell.new(shootActions).perform(), \"finished\")

func lasersShoot():
	var lasers = get_tree().get_nodes_in_group(\"lasers\")
	for laser in lasers:
		laser.shoot()
	for laser in lasers:
		yield(laser, \"finished\")

func saveCheckpointsIfPossible():
	print(\"try save\")
	for playerInfo in players.keys():
		var player = players[playerInfo] if players.has(playerInfo) else null
		if player:
			var checkpoint = $Root.getCheckpoint(player)
			if checkpoint:
				print(\"on checkpoint\")
				if !checkpoints.has(playerInfo) || checkpoint.number > checkpoints[playerInfo].number:
					if checkpoints.has(playerInfo):
						checkpoint.remove(playerInfo)
					checkpoints[playerInfo] = checkpoint
					checkpoint.touch(playerInfo)

func beltsMove():
	for i in range(1, 3):
		var beltAction = $Root/TileMap.getBeltAction(i)
		yield(beltAction.perform(), \"finished\")
		yield(getPlayersFallAction().perform(), \"finished\")
		yield(Actions.wait(0.5).perform(), \"finished\")
	saveCheckpointsIfPossible()

func getPlayersFallAction():
	var fallingActions = []
	for fallingPlayer in $Root.getPlayersInHole():
		fallingActions.append(Player.fallAction().with(fallingPlayer))
	return Parallell.new(fallingActions)

func beltPushPlayerIntoHole():
	var info = {\"name\": \"Olof\", \"color\": Color.blue}
	var player = addPlayerInfo(info)
	var cards = {player: [Cards.moveAction(Player.FORWARD, 2), Cards.moveAction(Player.FORWARD, 2)]}
	yield(playersAct(cards), \"completed\")
	print(\"Players finished\")
	player = spawnPlayer(info)
	cards = {player: [Cards.moveAction(Player.FORWARD, 2), Cards.moveAction(Player.FORWARD, 2)]}
	yield(playersAct(cards), \"completed\")

func spawnPlayer(info):
	var player = preload(\"res://Player.tscn\").instance()
	player.connect(\"onDestroyed\", self, \"onPlayerDestroyed\")
	add_child(player)
	player.position = checkpoints[info].position if checkpoints.has(info) else spawnPoints[info].position
	players[info] = player
	player.playerName = info.name if info.has(\"name\") else null
	player.color = info.color if info.has(\"color\") else null
	return player

func onPlayerDestroyed(player):
	var index = players.values().find(player)
	for info in players.keys():
		if player == players[info]:
			players.erase(info)

func addPlayerInfo(info):
	var spawnPoint = $Root.spawns[playerInfos.size()]
	playerInfos.append(info)
	spawnPoints[info] = spawnPoint
	return spawnPlayer(info)

func removePlayerInfo(info):
	playerInfos.erase(info)
	spawnPoints.erase(info)
	var player = players[info]
	players.erase(info)
	remove_child(player)"

[node name="Node2D" type="Node2D"]
script = SubResource( 1 )

[node name="Root" parent="." instance=ExtResource( 1 )]

[node name="Background" parent="Root" index="0"]
tile_data = PoolIntArray( 0, 1, 0, 1, 1, 0, 2, 1, 0, 3, 1, 0, 4, 1, 0, 5, 1, 0, 6, 1, 0, 7, 1, 0, 8, 1, 0, 9, 1, 0, 10, 1, 0, 11, 1, 0, 12, 1, 0, 13, 1, 0, 14, 1, 0, 65536, 0, 327680, 65537, 0, 327684, 65538, 0, 196612, 65539, 0, 393219, 65540, 1, 0, 65541, 1, 0, 65542, 1, 0, 65543, 1, 0, 65544, 0, 196611, 65545, 0, 327684, 65546, 0, 327684, 65547, 0, 327681, 65548, 0, 196612, 65549, 0, 327684, 65550, 0, 196613, 131072, 1, 0, 131073, 1, 0, 131074, 1, 0, 131075, 1, 0, 131076, 1, 0, 131077, 1, 0, 131078, 1, 0, 131079, 1, 0, 131080, 0, 458753, 131081, 1, 0, 131082, 1, 0, 131083, 0, 262147, 131084, 1, 0, 131085, 1, 0, 131086, 0, 262149, 196609, 1, 0, 196610, 1, 0, 196611, 1, 0, 196612, 1, 0, 196613, 1, 0, 196614, 1, 0, 196615, 1, 0, 196616, 1, 0, 196617, 0, 0, 196618, 0, 196610, 196619, 0, 393218, 196620, 0, 196613, 196621, 1, 0, 196622, 0, 262147, 262144, 1, 0, 262145, 1, 0, 262146, 1, 0, 262147, 1, 0, 262148, 1, 0, 262149, 1, 0, 262150, 1, 0, 262151, 1, 0, 262152, 0, 196611, 262153, 0, 458752, 262154, 0, 393221, 262155, 1, 0, 262156, 0, 393217, 262157, 0, 327684, 262158, 0, 327682, 327680, 1, 0, 327681, 1, 0, 327682, 1, 0, 327683, 1, 0, 327684, 1, 0, 327685, 1, 0, 327686, 1, 0, 327687, 1, 0, 327688, 0, 262149, 327689, 1, 0, 327690, 0, 327683, 327691, 0, 327681, 327692, 0, 327685, 327693, 1, 0, 327694, 0, 262149, 393216, 0, 0, 393217, 0, 131076, 393218, 0, 1, 393219, 0, 2, 393220, 1, 0, 393221, 0, 0, 393222, 0, 131076, 393223, 0, 1, 393224, 0, 458757, 393225, 1, 0, 393226, 1, 0, 393227, 0, 262149, 393228, 1, 0, 393229, 1, 0, 393230, 0, 262147, 458752, 0, 131072, 458753, 0, 4, 458754, 0, 4, 458755, 0, 131074, 458756, 1, 0, 458757, 0, 131072, 458758, 0, 4, 458759, 0, 4, 458760, 0, 458756, 458761, 0, 327684, 458762, 0, 196612, 458763, 0, 393218, 458764, 0, 327684, 458765, 0, 196612, 458766, 0, 327685 )

[node name="TileMap" parent="Root" index="1"]
tile_data = PoolIntArray( 4, 4, 0, 5, 4, 0, 7, 28, 0, 65540, 4, 0, 65541, 4, 0, 65542, 4, 0, 65543, 4, 0, 131074, -1073741822, 0, 131075, 4, 0, 131076, 4, 0, 131078, -1073741824, 0, 131079, 4, 0, 131081, 0, 0, 196608, 1610612740, 0, 196609, 1610612736, 0, 196610, -536870908, 0, 196611, -536870908, 0, 196612, -1610612734, 0, 196613, 23, 0, 196615, 29, 1, 262144, 536870916, 0, 262145, 536870912, 0, 262146, -1610612732, 0, 262147, -1610612732, 0, 262148, -536870910, 0, 262149, 1, 0, 262150, -1610612736, 0, 262151, -1610612735, 0, 262153, 0, 0, 327683, -2147483644, 0, 327684, 1073741826, 0, 327685, -1073741823, 0, 327686, -1073741824, 0, 327687, -1073741824, 0, 327689, 0, 0, 393220, -1610612732, 0 )

[node name="Lasers" parent="Root" index="2"]
tile_data = PoolIntArray( 2, 27, 0, 196614, -1610612709, 0, 393221, -1073741800, 0 )

[node name="Player" parent="." instance=ExtResource( 2 )]
position = Vector2( 715.157, 490.021 )

[node name="Player2" parent="." instance=ExtResource( 2 )]
position = Vector2( 790.592, 490.021 )

[editable path="Root"]
