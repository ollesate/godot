[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/Readiness-Regular.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://PlayerHand/PlayerCard.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "tool

extends Control

signal onSwap()
signal onUnready()
signal onReady()

var ready = false
var cardInfos
export var nrCards = 9 setget setNrCards

func setNrCards(val):
	if not $CardHand:
		return
	print(\"no cards\", nrCards)
	nrCards = val
	for child in $CardHand.get_children():
		child.hide()
	for i in range(nrCards):
		$CardHand.get_child(i).show()
	for i in range(5):
		if i <= nrCards - 1:
			get_node(str(i + 1)).show()
		else:
			get_node(str(i + 1)).hide()

func _ready():
	$CardHand.connect(\"onSwap\", self, \"onSwap\")
	$ReadyButton.connect(\"pressed\", self, \"buttonPressed\")


func manualSwap(idx1, idx2):
	var card = $CardHand.get_child(idx1)
	card.move($CardHand.get_child(idx2).rect_position + Vector2.DOWN * 20)
	var tween: Tween = card.get_node(\"Tween\")
	tween.playback_speed = 0.2
	while(card.get_node(\"Tween\").is_active()):
		$CardHand.onChildChangedPosition(card, card.rect_position)
		yield(Actions.wait(0.01).perform(), \"finished\")
	tween.playback_speed = 1
	yield(Actions.wait(0.1).perform(), \"finished\")
	$CardHand.onChildDropped(card)

func buttonPressed():
	setReady(!ready)

func startSimulation():
	setLocked(true)
	setReady(false)
	$ReadyButton.hide()

func setReady(ready):
	self.ready = ready
	$ReadyButton.text = \"Press to unready\" if ready else \"Press to ready\"
	if ready:
		emit_signal(\"onReady\")
	else:
		emit_signal(\"onUnready\")

func onSwap(idx1, idx2):
	emit_signal(\"onSwap\", idx1, idx2)
	
func setPlayerCards(cardInfos):
	self.cardInfos = cardInfos
	print(str(\"on player cards\", cardInfos))
	$ReadyButton.show()
	$CardHand.setCards(cardInfos)
	$CardHand.setLocked(false)
	
func setLocked(locked):
	$CardHand.setLocked(locked)

func setHpLeft(hpLeft):
	$CardHand.hpLeft = hpLeft
	
func cardStarted(cardInfo):
	$CardHand.selectCard(cardInfo)

func cardFinished(cardInfo):
	$CardHand.unselectCard(cardInfo)
	
	
"

[sub_resource type="GDScript" id=4]
script/source = "tool
extends Control

signal onSwap(idx1, idx2)

var positions = {}
var children = {}

export var locked = false setget setLocked
export var hpLeft = 5 setget setHpLeft

func _ready():
	for card in get_children():
		card.connect(\"onPositionChanged\", self, \"onChildChangedPosition\")
		card.connect(\"onDropped\", self, \"onChildDropped\")
		positions[card] = card.rect_position

func setCards(cardInfos):
	setLocked(false)
	for child in get_children():
		child.state = UiCard.NONE
	for index in range(cardInfos.size()):
		var info = cardInfos[index]
		get_child(index).title = info.description
		children[info.id] = get_child(index)

func setLocked(newLocked):
	locked = newLocked
	modulate.a = 0.7 if locked else 1.0
	for child in get_children():
		child.setLocked(locked)

func setHpLeft(newHpLeft):
	hpLeft = newHpLeft
	for idx in range(get_child_count()):
		print(str(idx, \" set locked \", idx >= hpLeft))
		get_child(idx).setDisabled(idx >= hpLeft)

func selectCard(info):
	children[info.id].state = UiCard.SELECTED

func unselectCard(info):
	children[info.id].state = UiCard.CONSUMED

func onChildChangedPosition(child, position):
	for i in range(get_child_count()):
		var currentChild = get_child(i)
		if currentChild != child:
			continue
		var prevChild = get_child(i - 1) if i > 0 else null
		var nextChild = get_child(i + 1) if i < get_child_count() - 1 else null
		var posY = positions[currentChild].y
		
		if prevChild and currentChild.rect_position.y < prevChild.rect_position.y:
			var mid1 = currentChild.rect_position.y + currentChild.rect_size.y / 2
			swap(currentChild, prevChild)
			move_child(currentChild, i - 1)
		elif nextChild and !nextChild.disabled and currentChild.rect_position.y > nextChild.rect_position.y:
			swap(currentChild, nextChild)
			move_child(currentChild, i + 1)

func onChildDropped(child):
	child.rect_position = positions[child]
	
func swap(child1, child2):
	emit_signal(\"onSwap\", index(child1), index(child2))
	var pos = positions[child1]
	positions[child1] = positions[child2]
	positions[child2] = pos
	child2.move(pos)
	
func index(child):
	for i in range(get_children().size()):
		if get_child(i) == child:
			return i
	return -1
"

[sub_resource type="DynamicFont" id=2]
size = 55
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=3]
size = 40
font_data = ExtResource( 1 )

[node name="PlayerHand" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CardHand" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 16.0
margin_bottom = -7.0
script = SubResource( 4 )
hpLeft = 10

[node name="PlayerCard" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 64.0
margin_right = -72.0
margin_bottom = 184.0

[node name="PlayerCard2" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 218.0
margin_right = -72.0
margin_bottom = 338.0

[node name="PlayerCard3" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 378.0
margin_right = -72.0
margin_bottom = 498.0

[node name="PlayerCard4" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 531.0
margin_right = -72.0
margin_bottom = 651.0

[node name="PlayerCard5" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 691.0
margin_right = -72.0
margin_bottom = 811.0

[node name="PlayerCard7" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 851.0
margin_right = -72.0
margin_bottom = 971.0

[node name="PlayerCard9" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 1011.0
margin_right = -72.0
margin_bottom = 1131.0

[node name="PlayerCard6" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 1162.0
margin_right = -72.0
margin_bottom = 1282.0

[node name="PlayerCard8" parent="CardHand" instance=ExtResource( 3 )]
anchor_right = 1.0
margin_left = 128.0
margin_top = 1328.0
margin_right = -72.0
margin_bottom = 1448.0

[node name="1" type="Label" parent="."]
margin_left = 48.0
margin_top = 80.0
margin_right = 88.0
margin_bottom = 153.0
custom_fonts/font = SubResource( 2 )
text = "1"

[node name="2" type="Label" parent="."]
margin_left = 48.0
margin_top = 400.0
margin_right = 88.0
margin_bottom = 473.0
custom_fonts/font = SubResource( 2 )
text = "3"

[node name="3" type="Label" parent="."]
margin_left = 48.0
margin_top = 240.0
margin_right = 88.0
margin_bottom = 313.0
custom_fonts/font = SubResource( 2 )
text = "2"

[node name="4" type="Label" parent="."]
margin_left = 48.0
margin_top = 560.0
margin_right = 88.0
margin_bottom = 633.0
custom_fonts/font = SubResource( 2 )
text = "4"

[node name="5" type="Label" parent="."]
margin_left = 48.0
margin_top = 720.0
margin_right = 88.0
margin_bottom = 793.0
custom_fonts/font = SubResource( 2 )
text = "5"

[node name="ReadyButton" type="Button" parent="."]
margin_left = 112.0
margin_top = 1488.0
margin_right = 976.0
margin_bottom = 1563.0
rect_min_size = Vector2( 800, 100 )
custom_fonts/font = SubResource( 3 )
text = "Press to ready"
